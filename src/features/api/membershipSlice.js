import { apiSlice } from './apiSlice';
import { tostAlert } from '../../utils/notification';

export const membershipSlice = apiSlice.injectEndpoints({
  endpoints: (builder) => ({
    saveMembership: builder.mutation({
      query: (data) => ({
        url: '/membershipPlan/add',
        method: 'POST',
        body: data,
      }),
      onQueryStarted: async (arg, { queryFulfilled }) => {
        try {
          await queryFulfilled;
          tostAlert('success', 'Membership plan added successfully!');
        } catch (error) {
          tostAlert('error', 'Failed to add membership plan.');
        }
      },
    }),

    getMembership: builder.query({
      query: () => ({
        url: '/membershipPlan', // Corrected endpoint for fetching all membership plans
        method: 'GET',
      }),
      transformResponse: (response) => response.data, // Ensure the response format matches your API
    }),

    updateMembership: builder.mutation({
      query: ({ membershipId, data }) => ({
        url: '/membershipPlan/update/' + membershipId,
        method: 'PUT', // Corrected method to PUT for updates
        body: data,
      }),
      onQueryStarted: async (arg, { queryFulfilled }) => {
        try {
          await queryFulfilled;
          tostAlert('success', 'Membership plan updated successfully!');
        } catch (error) {
          tostAlert('error', 'Failed to update membership plan.');
        }
      },
    }),
  }),
});

// Export hooks generated by RTK Query for use in components
export const {
  useSaveMembershipMutation,
  useGetMembershipQuery,
  useUpdateMembershipMutation,
} = membershipSlice;
