import React, { useContext, useState } from 'react'
import { ThemeContext } from '../../context/ThemeContext'
import { Button } from 'antd'
import { ExportOutlined } from '@ant-design/icons'
import AccessoriesCard from '../../components/Cards/AccessoriesCard'
import CustomModelOne from '../../components/CustomModel/CustomModel'
import CustomModelViewProduct from '../../components/CustomModel/CustomModelViewProduct'
import { useSelector } from 'react-redux'
import { useGetOrderByUserQuery } from '../../features/api/orderSlice.js'

const OrderHistory = () => {
  const { theme } = useContext(ThemeContext)
  const user = useSelector((state) => state.auth.userId)
  const {
    data: myOrders,
    error: myOrdersError,
    isLoading: myOrdersLoading,
  } = useGetOrderByUserQuery(user)

  // console.log(JSON.stringify(myOrders?.data?.docs))
  const myOrderHistoryProduct = myOrders?.data?.docs.flatMap((order) =>
    order.products.map((productItem) => productItem.product),
  )
  const [showCustomModelOne, setShowCustomModelOne] = useState(false)

  const openCustomModelOne = (id) => {
    setShowCustomModelOne(true)
  }

  const [showCustomModelViewProduct, setShowCustomModelViewProduct] =
    useState(false)

  const openCustomModelViewProduct = (id) => {
    setShowCustomModelViewProduct(true)
  }

  return (
    <>
      <>
        <div className="relative flex items-center justify-between mb-15">
          <div
            className="text-3xl w-fit z-10"
            style={{ backgroundColor: theme.background }}
          >
            Oder History
          </div>
          <div
            className="absolute bg-transparent h-0.5 rounded w-full z-0"
            style={{ backgroundColor: theme.textColor }}
          ></div>
        </div>

        {myOrders?.data?.docs?.length > 0 ? (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 pb-10 justify-items-center">
            {myOrderHistoryProduct.map((product, index) => (
              <AccessoriesCard
                product={product}
                id={product._id}
                key={index}
                image={product.image} //
                name={product.name}
                country={product.country}
                originalPrice={
                  product.unitDiscount != 0 && product.unitDiscount
                    ? product.unitPrice
                    : null
                }
                salePrice={
                  product.unitDiscount != 0 && product.unitDiscount
                    ? product.unitPrice -
                      (product.unitPrice / 100) * product.unitDiscount
                    : product.unitPrice
                }
                OpenModel={openCustomModelOne}
                OpenModelViewProduct={openCustomModelViewProduct}
              />
            ))}
          </div>
        ) : (
          <div className="text-5xl h-screen w-full flex justify-center items-center font-black opacity-60 text-center">
            Product Not Found!
          </div>
        )}
      </>

      <CustomModelOne
        showCustomModelOne={showCustomModelOne}
        setShowCustomModelOne={setShowCustomModelOne}
      />
      <CustomModelViewProduct
        showCustomModelViewProduct={showCustomModelViewProduct}
        setShowCustomModelViewProduct={setShowCustomModelViewProduct}
      />
    </>
  )
}

export default OrderHistory
